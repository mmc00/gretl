<?xml version="1.0" encoding="UTF-8"?>
<gretl-functions>
<gretl-function-package name="tramolin" ID="1209730747" needs-time-series-data="true" minver="1.9.9">
<author>Ignacio Diaz-Emparanza</author>
<version>1.10</version>
<date>2014-05-02</date>
<description>Outlier detection/correction and missing data interpolation</description>
<label>Linearization by Tramo</label>
<menu-attachment>MAINWIN/Variable</menu-attachment>
<help>
Automatic outlier detection/correction and missing data interpolation by means of TRAMO. The parameter passed to TRAMO is RSA=3 (see TRAMO manual)

This package automatically detects if your OS is Windows or Linux. 

Requirement:

You should have TRAMO installed and working jointly with gretl.
(See http://gretl.sourceforge.net/tramo/tramo-seats.html )

The function has only one parameter: series sername, the name of the series you want to process.
</help>
<gretl-function name="tramolin" type="series">
 <params count="1">
  <param name="sername" type="series"/>
 </params>
<code>set force_decpoint on
series zsername = zeromiss(sername) #ID 2/05/2014
scalar ausprim = $t1-firstobs(t)+1 #ID 11/10/07 *5/05/2014
scalar nobser = lastobs(zsername)-$t1+1
scalar ausp1 = ausprim+1
scalar ausfin = lastobs(t)-lastobs(zsername)
scalar ausf1 = lastobs(zsername)+1
scalar fyear = $obsmajor[$t1]
scalar fquarter = ($pd ==1 ) ? 1 : $obsminor[$t1]

if WIN32
  outfile --write &quot;@tramodir\sername&quot;
else
  outfile --write &quot;@tramodir/sername&quot;
endif
printf &quot;sername\n&quot;
printf &quot;%.8g %.8g %.8g %.8g\n&quot;, nobser, fyear, fquarter, $pd
loop j=1..nobser --quiet
  if missing(sername[j])
    printf &quot;-99999\n&quot;
  else
    printf &quot;%.8g\n&quot;, sername[j]
  endif
endloop
printf &quot;$INPUT RSA=3 $END\n&quot;
printf &quot;\n&quot;
outfile --close

# ****** To solve the problem of missing data at the beginning
# ****** or end of the sample:
if WIN32
  outfile --write &quot;@tramodir\ausentesp&quot;
else
  outfile --write &quot;@tramodir/ausentesp&quot;
endif
if ausprim!=0
  loop j=1..ausprim --quiet
    print &quot;NA&quot;
  endloop
endif
outfile --close

if WIN32
  outfile --write &quot;@tramodir\ausentesf&quot;
else
  outfile --write &quot;@tramodir/ausentesf&quot;
endif

if ausfin!=0
  loop j=1..ausfin --quiet
    print &quot;NA&quot;
  endloop
endif
outfile --close
smpl --full
#************
if WIN32
  set shelldir @tramodir\graph\series
  ! del /Q *.t &amp;&amp; cd @tramodir &amp;&amp; &quot;@tramo&quot; -i sername -k sername.ser &amp;&amp; cd @tramodir\graph\series &amp;&amp; echo &quot;ser_adj&quot; &gt; sername.txt
  #! type &quot;@tramodir\ausentesp&quot; &gt;&gt; sername.txt
  ! if exist xlin.t. (more +6 xlin.t &gt;&gt; sername.txt) else (more +6 xorigt.t &gt;&gt; sername.txt)
  ! type &quot;@tramodir\ausentesf&quot; &gt;&gt; sername.txt
  append &quot;@tramodir\graph\series\sername.txt&quot;
else
  set shelldir @tramodir/graph/series
  ! rm -f *.t
  ! cd @tramodir &amp;&amp; @tramo -i sername -k sername.ser &gt; /dev/null
  ! cd @tramodir/graph/series &amp;&amp; echo &quot;ser_adj&quot; &gt; sername.txt
  #! cat &quot;@tramodir/ausentesp&quot; &gt;&gt; sername.txt
  ! if [ -e &quot;xlin.t&quot; ]; then tail --lines=+7 xlin.t &gt;&gt; sername.txt ; else tail --lines=+7 xorigt.t &gt;&gt; sername.txt ; fi
  ! cat &quot;@tramodir/ausentesf&quot; &gt;&gt; sername.txt
  append &quot;@tramodir/graph/series/sername.txt&quot;
endif

series diferencia = sername - ser_adj
scalar suma = sum(diferencia)
if suma=0
  setinfo ser_adj -d &quot;Original&quot;
else
  setinfo ser_adj -d &quot;Linearized&quot;
endif
set force_decpoint off
return ser_adj
</code>
</gretl-function>
<sample-script>
include tramolin.gfn
open data9-3.gdt

series price_c = tramolin(price)

# The function corrects an outlier (a level shift) in
# observation 1980.3 of the series 'price'; compare
# the series below.

smpl 1980:1 1983:4
print price price_c --byobs
</sample-script>
</gretl-function-package>
</gretl-functions>

