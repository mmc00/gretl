include ./sfa_mod.gfn
# Sample script to demonstrate use of function sfa_mod
# Estimation of basic stochastic frontier


# Use Greene dataset 9-1
open greene9_1.gdt
series ln_vadd = ln(valadd)
series ln_cap = ln(capital)
series ln_lab = ln(labor)
list xlist = const ln_cap ln_lab

# Some models have problems with convergence, so adjust tolerance
set bfgs_toler 0.0001

# Estimate Exponential Model
# Ignore warning message - results correspond to Greene's results 
matrix sfa_coeff1 = sfa_mod(ln_vadd, xlist, "E", "P")
print sfa_coeff1

# Use coefficients from Exponential Model to estimate Half-Normal Model
matrix start2 = zeros(5,1)
matrix start2[1:5,1] = sfa_coeff1[1:5,1]
matrix sfa_coeff2 = sfa_mod(ln_vadd, xlist, "H", "P", &start2)

# Estimate Truncated Normal Model
matrix sfa_coeff3 = sfa_mod(ln_vadd, xlist, "T", "P")

print ln_vadd --byobs

# Generate efficiency residuals for Exponential Model
# series upred = sfa_eff(ln_vadd, xlist, sfa_coeff1, "E", "P")
# Generate technical efficiencies for Exponential Model
# series tech_eff = sfa_eff(ln_vadd, xlist, sfa_coeff1, "E", "P", "T")

# print ln_vadd upred tech_eff --byobs