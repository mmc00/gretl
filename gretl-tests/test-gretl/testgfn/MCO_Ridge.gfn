<?xml version="1.0" encoding="UTF-8"?>
<gretl-functions>
<gretl-function-package name="MCO_Ridge" ID="1362614116" minver="1.8.4">
<author email="urieleconometria@hotmail.com">Uriel Rodríguez Ramírez</author>
<version>1.4</version>
<date>2015-06-15</date>
<description>Ridge Regression</description>
<help>
--------------------------------------------------------------------------
Remedial Measures for Multicollinearity
Uriel Rodríguez Ramirez, Universidad de Guanajuato.
--------------------------------------------------------------------------

Restrict the use of the regression model to draw infererence on estimated coefficients associated to linearly dependent variables. Ridge regression shrinks estimators by 'penalizing' their size.
 
Inputs:
1. lambda (λ) penalizing parameter, usually 1/F, the optimization problem being:
         Min ε'*ε S.a β'*β ≤ s
the lagrange is:
         L= ε'*ε - λ*[β'*β - s]
solving the problem:
         β=(X'*X-λ*Id)^(-1)*(X'*Y)
2. X independent variables matrix (include a column of 'ones' in the X matrix)
3. Y  dependent variable
4. T Number of observations
5. K Number of independent variables (include the column associated to 
     the constant term)

How to Choose λ:
1.λ=1/Fstat
2.Get the variance inflation factors (VIF) close to 1
3.Estimated coefficients should be stable

* There is no systematic way of choosing λ! But the value of λ should be smaller when the R2 is high and viceversa.

Output: Matrix 
1. OLS Estimate      -Output matrix;
2. Ridge regression estimate
3. recalls default λ   

Bibliography:
*Maddala, Introduction to Econometrics, Third Edition, 2001.
*Jia Li, Ridge Regression.pdf,
*http://www.coe.fau.edu/faculty/morris/STA7114%20Files/Lab%203Instructions/ridge_regression.htm
</help>
<gretl-function name="MCO_Ridge" type="void">
 <params count="5">
  <param name="y" type="matrix">
<description>dependent variable</description>
  </param>
  <param name="x" type="matrix">
<description>independents variables</description>
  </param>
  <param name="la" type="scalar">
<description>lambda</description>
  </param>
  <param name="k" type="scalar">
<description># of independents variables</description>
  </param>
  <param name="T" type="scalar">
<description># of observations</description>
  </param>
 </params>
<code>matrix Id= I(k)
matrix x2=x'x
matrix y2=x'y
matrix x3=inv(x2-la*Id)
B=(x3)*(y2)
yhat=x*B
ym=yhat-mean(y)
U=y-yhat
SSE=U'U
SSR=ym'ym
SST=SSE+SSR
R2=SSR/SST
sig=SSE/(T-k)
matrix varB=sig*x3
varb=diag(varB)
des=sqrt(varb)
dee=1/(des)
F=(R2/(1-R2))*((T-k)/(k-1))
matrix ye=x'y
matrix xe=inv(x2)
Beta=(xe)*(ye)
yhati=x*Beta
ymi=yhati-mean(y)
Ui=y-yhati
SSEE=Ui'Ui
SSRi=ymi'ymi
SSTi=SSEE+SSRi
R2i=SSRi/SSTi
sigi=SSEE/(T-k)
matrix varBi=sigi*xe
varbi=diag(varBi)
desi=sqrt(varbi)
deei=1/(desi)
Fe=(R2i/(1-R2i))*((T-k)/(k-1))
lam=1/Fe
matrix Id= I(k)
matrix x21=x'x
matrix y21=x'y
matrix x31=inv(x21-lam*Id)
Be=(x31)*(y21)
yhatin=x*Be
ymin=yhatin-mean(y)
Uin=y-yhatin
SSEEn=Uin'Uin
SSRin=ymin'ymin
SSTin=SSEEn+SSRin
R2in=SSRin/SSTin
sigin=SSEEn/(T-k)
matrix varBin=sigin*xe
varbin=diag(varBin)
desin=sqrt(varbin)
deein=1/(desin)
Fen=(R2i/(1-R2i))*((T-k)/(k-1))
if la==0
  la=lam
  B=Be
  printf &quot;==============================================================\n&quot;
  printf &quot;Coefficients (with default lambda)\n&quot;
  printf &quot;==============================================================\n&quot;
  print Be
  printf &quot;Lambda = %g\n&quot;,lam
  printf &quot;S.E. of regression  %9f\n&quot;, sigin
  printf &quot;R-squared           %9.6f\n&quot;, R2in
  printf &quot;F(%2d,%5d)         %9f\n&quot;, (k-1), (T-k), Fen
  printf &quot;--------------------------------------------------------------\n\n&quot;
else
  printf &quot;==============================================================\n&quot;
  printf &quot;Ridge regression coefficients:\n&quot;
  printf &quot;==============================================================\n&quot;
  print B
  printf &quot;Lambda= %g\n&quot;,la
  printf &quot;S.E. of regression  %9f\n&quot;, sig
  printf &quot;R-squared           %9.6f\n&quot;, R2
  printf &quot;F(%2d,%5d)         %9f\n&quot;, (k-1), (T-k), F
  printf &quot;--------------------------------------------------------------\n\n&quot;
endif
printf &quot;==============================================================\n&quot;
printf &quot;OLS coefficients:\n&quot;
printf &quot;==============================================================\n&quot;
print Beta
printf &quot;S.E. of regression  %9f\n&quot;, sigi
printf &quot;R-squared           %9.6f\n&quot;, R2i
printf &quot;F(%2d,%5d)         %9f\n&quot;, (k-1), (T-k), Fe
printf &quot;--------------------------------------------------------------\n&quot;
</code>
</gretl-function>
<sample-script>
include MCO_Ridge.gfn
open australia.gdt
matrix Y = PAU
matrix C = {PUS, IUS, IAU}
MCO_Ridge(Y,C , 0.3644, 3, 77)
</sample-script>
</gretl-function-package>
</gretl-functions>
